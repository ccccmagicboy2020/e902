ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           RISC-V
  Version:                           0x1
  Entry point address:               0x100004c
  Start of program headers:          52 (bytes into file)
  Start of section headers:          10536 (bytes into file)
  Flags:                             0x9, RVC, RVE, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         1
  Size of section headers:           40 (bytes)
  Number of section headers:         16
  Section header string table index: 15

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .text             PROGBITS        01000000 001000 000070 00  AX  0   0  2
  [ 2] .rodata           PROGBITS        01000070 001070 000000 00  WA  0   0  1
  [ 3] .data             PROGBITS        01000070 001070 000000 00  WA  0   0  1
  [ 4] .bss              NOBITS          01000070 001070 000010 00  WA  0   0  4
  [ 5] .riscv.attributes RISCV_ATTRIBUTE 00000000 001070 000029 00      0   0  1
  [ 6] .comment          PROGBITS        00000000 001099 000032 01  MS  0   0  1
  [ 7] .debug_line       PROGBITS        00000000 0010cb 0002e7 00      0   0  1
  [ 8] .debug_info       PROGBITS        00000000 0013b2 000a39 00      0   0  1
  [ 9] .debug_abbrev     PROGBITS        00000000 001deb 00022c 00      0   0  1
  [10] .debug_aranges    PROGBITS        00000000 002018 000040 00      0   0  8
  [11] .debug_str        PROGBITS        00000000 002058 000525 01  MS  0   0  1
  [12] .debug_frame      PROGBITS        00000000 002580 000020 00      0   0  4
  [13] .symtab           SYMTAB          00000000 0025a0 000220 10     14  16  4
  [14] .strtab           STRTAB          00000000 0027c0 0000c9 00      0   0  1
  [15] .shstrtab         STRTAB          00000000 002889 00009c 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x001000 0x01000000 0x01000000 0x00070 0x00080 RWE 0x1000

 Section to Segment mapping:
  Segment Sections...
   00     .text .bss 
======================================================================

Allocating common symbols
Common symbol       size              file

flash_id            0x4               Obj/main.o

Discarded input sections

 .text          0x0000000000000000        0x0 Obj/crt0.o
 .data          0x0000000000000000        0x0 Obj/crt0.o
 .bss           0x0000000000000000        0x0 Obj/crt0.o
 .data          0x0000000000000000        0x0 Obj/main.o
 .bss           0x0000000000000000        0x0 Obj/main.o

Memory Configuration

Name             Origin             Length             Attributes
MEM              0x0000000001000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD Obj/crt0.o
LOAD Obj/main.o
LOAD c:/cdk/csky/mingw/riscv64-unknown-elf-toolchain/bin/../lib/gcc/riscv64-unknown-elf/8.4.0/rv32ec/ilp32e\libgcc.a
START GROUP
LOAD c:/cdk/csky/mingw/riscv64-unknown-elf-toolchain/bin/../lib/gcc/riscv64-unknown-elf/8.4.0/../../../../riscv64-unknown-elf/lib/rv32ec/ilp32e\libc.a
LOAD c:/cdk/csky/mingw/riscv64-unknown-elf-toolchain/bin/../lib/gcc/riscv64-unknown-elf/8.4.0/../../../../riscv64-unknown-elf/lib/rv32ec/ilp32e\libgloss.a
END GROUP
LOAD c:/cdk/csky/mingw/riscv64-unknown-elf-toolchain/bin/../lib/gcc/riscv64-unknown-elf/8.4.0/rv32ec/ilp32e\libgcc.a
                0x0000000001001000                __stack_top = (ORIGIN (MEM) + LENGTH (MEM))

.text           0x0000000001000000       0x70
                0x0000000001000000                . = ALIGN (0x4)
 *crt0.o(.text)
                0x0000000001000000                __stext = .
 *(.text)
 .text          0x0000000001000000       0x4c Obj/main.o
                0x0000000001000000                main
 *(.text*)
 .text.init     0x000000000100004c       0x1a Obj/crt0.o
                0x000000000100004c                Reset_Handler
 *(.text.*)
                0x0000000001000070                . = ALIGN (0x10)
 *fill*         0x0000000001000066        0xa 
                0x0000000001000070                __etext = .

.rela.dyn       0x0000000001000070        0x0
 .rela.text.init
                0x0000000001000070        0x0 Obj/crt0.o
 .rela.text     0x0000000001000070        0x0 Obj/crt0.o

.rodata         0x0000000001000070        0x0
                0x0000000001000070                . = ALIGN (0x4)
                0x0000000001000070                __srodata = .
 *(.rdata)
 *(.rdata*)
 *(.rdata.*)
 *(.rodata)
 *(.rodata*)
 *(.rodata.*)
                0x0000000001000070                . = ALIGN (0x10)
                0x0000000001000070                __erodata = .

.data           0x0000000001000070        0x0
                0x0000000001000070                . = ALIGN (0x4)
                0x0000000001000070                __sdata = .
                0x0000000001000070                __data_start = .
 *(.data)
 *(.data*)
 *(.data.*)
                0x0000000001000070                __global_pointer$ = .
 *(.sdata)
 *(.sdata.*)
                0x0000000001000070                . = ALIGN (0x10)
                0x0000000001000070                __data_end__ = .
                0x0000000001000070                __edata = .

.bss            0x0000000001000070       0x10
                0x0000000001000070                . = ALIGN (0x4)
                0x0000000001000070                __sbss = ALIGN (0x4)
                0x0000000001000070                __bss_start__ = .
 *(.bss)
 *(.bss.*)
 *(COMMON)
 COMMON         0x0000000001000070        0x4 Obj/main.o
                0x0000000001000070                flash_id
                0x0000000001000080                . = ALIGN (0x10)
 *fill*         0x0000000001000074        0xc 
                0x0000000001000080                __bss_end__ = .
                0x0000000001000080                __end = .
                0x0000000001000080                end = .
OUTPUT(Obj/spi_test.elf elf32-littleriscv)

.riscv.attributes
                0x0000000000000000       0x29
 .riscv.attributes
                0x0000000000000000       0x29 Obj/crt0.o
 .riscv.attributes
                0x0000000000000029       0x29 Obj/main.o

.comment        0x0000000000000000       0x32
 .comment       0x0000000000000000       0x32 Obj/main.o
                                         0x33 (size before relaxing)

.debug_line     0x0000000000000000      0x2e7
 .debug_line    0x0000000000000000       0x4d Obj/crt0.o
 .debug_line    0x000000000000004d      0x29a Obj/main.o

.debug_info     0x0000000000000000      0xa39
 .debug_info    0x0000000000000000       0x26 Obj/crt0.o
 .debug_info    0x0000000000000026      0xa13 Obj/main.o

.debug_abbrev   0x0000000000000000      0x22c
 .debug_abbrev  0x0000000000000000       0x14 Obj/crt0.o
 .debug_abbrev  0x0000000000000014      0x218 Obj/main.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 Obj/crt0.o
 .debug_aranges
                0x0000000000000020       0x20 Obj/main.o

.debug_str      0x0000000000000000      0x525
 .debug_str     0x0000000000000000       0x39 Obj/crt0.o
 .debug_str     0x0000000000000039      0x4ec Obj/main.o
                                        0x57e (size before relaxing)

.debug_frame    0x0000000000000000       0x20
 .debug_frame   0x0000000000000000       0x20 Obj/main.o
