(gdb) disassemble /m
Dump of assembler code for function timer_init:
25      static void timer_init(int index, uint32_t init_cnt) {

26              if (init_cnt) {
   0x0000024e <+0>:     beqz    a1,0x26e <timer_init+32>

27                      TIMINIT[index] = init_cnt;
   0x00000250 <+2>:     slli    a5,a0,0x2
   0x00000254 <+6>:     lui     a4,0x1f020
   0x00000258 <+10>:    addi    a3,a4,8 # 0x1f020008
   0x0000025c <+14>:    add     a5,a5,a3
   0x0000025e <+16>:    sw      a1,0(a5)

28                      reg32_set(STCCTL, TMEN(index));
=> 0x00000260 <+18>:    lw      a3,0(a4)
   0x00000262 <+20>:    li      a5,16
   0x00000264 <+22>:    sll     a5,a5,a0
   0x00000268 <+26>:    or      a3,a3,a5
   0x0000026a <+28>:    sw      a3,0(a4)
   0x0000026c <+30>:    ret

29              }
30              else
31                      reg32_clr(STCCTL, TMEN(index));
   0x0000026e <+32>:    lui     a3,0x1f020
   0x00000272 <+36>:    lw      a4,0(a3)
   0x00000274 <+38>:    li      a5,16
   0x00000276 <+40>:    sll     a5,a5,a0
   0x0000027a <+44>:    not     a5,a5
   0x0000027e <+48>:    and     a5,a5,a4
   0x00000280 <+50>:    sw      a5,0(a3)
   0x00000282 <+52>:    ret

End of assembler dump.
(gdb) ni
0x00000262      28                      reg32_set(STCCTL, TMEN(index));
(gdb) stepi
0x00000264      28                      reg32_set(STCCTL, TMEN(index));
(gdb) stepi
0x00000268      28                      reg32_set(STCCTL, TMEN(index));
(gdb) p/x $a4
$1 = 0x1f020000
(gdb) p/x $a3
$2 = 0x0
(gdb) p/x $ra
$3 = 0x28e
(gdb) x/12xw 0x1000090
0x1000090:      0xc38c434c      0xe8c62603      0xe906c783      0x00178593
0x10000a0:      0xe8b68823      0x0000029a      0xc3984718      0x010007b7
0x10000b0:      0x000000c8      0x47114394      0xf8d768e3      0x0000001c
(gdb) stepi
0x0000026a      28                      reg32_set(STCCTL, TMEN(index));
(gdb) stepi
28                      reg32_set(STCCTL, TMEN(index));
(gdb) disassemble /m
Dump of assembler code for function timer_init:
25      static void timer_init(int index, uint32_t init_cnt) {

26              if (init_cnt) {
   0x0000024e <+0>:     beqz    a1,0x26e <timer_init+32>

27                      TIMINIT[index] = init_cnt;
   0x00000250 <+2>:     slli    a5,a0,0x2
   0x00000254 <+6>:     lui     a4,0x1f020
   0x00000258 <+10>:    addi    a3,a4,8 # 0x1f020008
   0x0000025c <+14>:    add     a5,a5,a3
   0x0000025e <+16>:    sw      a1,0(a5)

28                      reg32_set(STCCTL, TMEN(index));
   0x00000260 <+18>:    lw      a3,0(a4)
   0x00000262 <+20>:    li      a5,16
   0x00000264 <+22>:    sll     a5,a5,a0
   0x00000268 <+26>:    or      a3,a3,a5
   0x0000026a <+28>:    sw      a3,0(a4)
=> 0x0000026c <+30>:    ret

29              }
30              else
31                      reg32_clr(STCCTL, TMEN(index));
   0x0000026e <+32>:    lui     a3,0x1f020
   0x00000272 <+36>:    lw      a4,0(a3)
   0x00000274 <+38>:    li      a5,16
   0x00000276 <+40>:    sll     a5,a5,a0
   0x0000027a <+44>:    not     a5,a5
   0x0000027e <+48>:    and     a5,a5,a4
   0x00000280 <+50>:    sw      a5,0(a3)
   0x00000282 <+52>:    ret

End of assembler dump.
(gdb) p/x $ra
$4 = 0x28e
(gdb) stepi
0x0000028e in tick_init () at ../nos/stc.c:92
92              timer_init(CONFIG_TICK_TIMER, TIMCNT_MAX);
(gdb) disassemble /m
Dump of assembler code for function tick_init:
91      static void tick_init(void) {
   0x00000284 <+0>:     addi    sp,sp,-12
   0x00000286 <+2>:     sw      ra,8(sp)

92              timer_init(CONFIG_TICK_TIMER, TIMCNT_MAX);
   0x00000288 <+4>:     li      a1,-1
   0x0000028a <+6>:     li      a0,3
   0x0000028c <+8>:     jal     0x24e <timer_init>
=> 0x0000028e <+10>:    lw      ra,8(sp)
   0x00000290 <+12>:    addi    sp,sp,12
   0x00000292 <+14>:    ret

End of assembler dump.
(gdb) p/x $sp
$5 = 0x100009c
(gdb) x/12xw 0x1000090
0x1000090:      0xc38c434c      0xe8c62603      0xe906c783      0x00178593
0x10000a0:      0xe8b68823      0x0000029a      0xc3984718      0x010007b7
0x10000b0:      0x000000c8      0x47114394      0xf8d768e3      0x0000001c
(gdb) stepi
0x00000290      92              timer_init(CONFIG_TICK_TIMER, TIMCNT_MAX);
(gdb) p/x $ra
$6 = 0x80820131
(gdb) disassemble /m
Dump of assembler code for function tick_init:
91      static void tick_init(void) {
   0x00000284 <+0>:     addi    sp,sp,-12
   0x00000286 <+2>:     sw      ra,8(sp)

92              timer_init(CONFIG_TICK_TIMER, TIMCNT_MAX);
   0x00000288 <+4>:     li      a1,-1
   0x0000028a <+6>:     li      a0,3
   0x0000028c <+8>:     jal     0x24e <timer_init>
   0x0000028e <+10>:    lw      ra,8(sp)
=> 0x00000290 <+12>:    addi    sp,sp,12
   0x00000292 <+14>:    ret

End of assembler dump.
(gdb) p/x $sp
$7 = 0x100009c
(gdb) x/8xw 0x10000a0
0x10000a0:      0xe8b68823      0x0000029a      0xc3984718      0x010007b7
0x10000b0:      0x000000c8      0x47114394      0xf8d768e3      0x0000001c
(gdb)