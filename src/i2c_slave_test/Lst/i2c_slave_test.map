ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           RISC-V
  Version:                           0x1
  Entry point address:               0x1000000
  Start of program headers:          52 (bytes into file)
  Start of section headers:          19416 (bytes into file)
  Flags:                             0x9, RVC, RVE, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         1
  Size of section headers:           40 (bytes)
  Number of section headers:         18
  Section header string table index: 17

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .text             PROGBITS        01000000 001000 0003a0 00  AX  0   0 64
  [ 2] .rodata           PROGBITS        010003a0 0013a0 000000 00  WA  0   0  1
  [ 3] .data             PROGBITS        010003a0 0013a0 000000 00  WA  0   0  1
  [ 4] .bss              NOBITS          010003a0 0013a0 000520 00  WA  0   0  4
  [ 5] .riscv.attributes RISCV_ATTRIBUTE 00000000 0013a0 000029 00      0   0  1
  [ 6] .comment          PROGBITS        00000000 0013c9 000032 01  MS  0   0  1
  [ 7] .debug_line       PROGBITS        00000000 0013fb 000b3d 00      0   0  1
  [ 8] .debug_info       PROGBITS        00000000 001f38 001856 00      0   0  1
  [ 9] .debug_abbrev     PROGBITS        00000000 00378e 0005f9 00      0   0  1
  [10] .debug_aranges    PROGBITS        00000000 003d88 000068 00      0   0  8
  [11] .debug_str        PROGBITS        00000000 003df0 0006fc 01  MS  0   0  1
  [12] .debug_ranges     PROGBITS        00000000 0044f0 000038 00      0   0  8
  [13] .debug_loc        PROGBITS        00000000 004528 000028 00      0   0  1
  [14] .debug_frame      PROGBITS        00000000 004550 000088 00      0   0  4
  [15] .symtab           SYMTAB          00000000 0045d8 000390 10     16  23  4
  [16] .strtab           STRTAB          00000000 004968 0001bb 00      0   0  1
  [17] .shstrtab         STRTAB          00000000 004b23 0000b5 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x001000 0x01000000 0x01000000 0x003a0 0x008c0 RWE 0x1000

 Section to Segment mapping:
  Segment Sections...
   00     .text .bss 
======================================================================

Allocating common symbols
Common symbol       size              file

i2c_slave_buffer    0x5               Obj/uart.o
fifo                0x100             Obj/uart.o
wp                  0x1               Obj/uart.o
rp                  0x1               Obj/uart.o

Discarded input sections

 .data          0x0000000000000000        0x0 Obj/crt0.o
 .bss           0x0000000000000000        0x0 Obj/crt0.o
 .data          0x0000000000000000        0x0 Obj/main.o
 .bss           0x0000000000000000        0x0 Obj/main.o
 .data          0x0000000000000000        0x0 Obj/uart.o

Memory Configuration

Name             Origin             Length             Attributes
MEM              0x0000000001000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD Obj/crt0.o
LOAD Obj/main.o
LOAD Obj/uart.o
LOAD d:/c-sky/cdk/csky/mingw/riscv64-unknown-elf-toolchain/bin/../lib/gcc/riscv64-unknown-elf/8.4.0/rv32ec/ilp32e\libgcc.a

.text           0x0000000001000000      0x3a0
                0x0000000001000000                . = ALIGN (0x4)
 *crt0.o(.text.init)
 .text.init     0x0000000001000000       0x36 Obj/crt0.o
                0x0000000001000000                Reset_Handler
 *crt0.o(.exp_table)
 *fill*         0x0000000001000036        0xa 
 .exp_table     0x0000000001000040       0xc0 Obj/crt0.o
                0x0000000001000040                __Vectors
                0x0000000001000100                __stext = .
 *(.text)
 .text          0x0000000001000100      0x104 Obj/crt0.o
                0x0000000001000100                Default_IRQHandler
                0x0000000001000184                ExceptionHandler
                0x0000000001000200                Default_Handler
 .text          0x0000000001000204       0x2e Obj/main.o
                0x0000000001000204                i2c_slave_init
                0x0000000001000226                main
 .text          0x0000000001000232      0x164 Obj/uart.o
                0x0000000001000232                uart_init
                0x000000000100026c                handle_irq
                0x0000000001000336                getchar
                0x000000000100035a                _putchar
 *(.text*)
 *(.text.*)
                0x00000000010003a0                . = ALIGN (0x10)
 *fill*         0x0000000001000396        0xa 
                0x00000000010003a0                __etext = .

.rodata         0x00000000010003a0        0x0
                0x00000000010003a0                . = ALIGN (0x4)
                0x00000000010003a0                __srodata = .
 *(.rdata)
 *(.rdata*)
 *(.rdata.*)
 *(.rodata)
 *(.rodata*)
 *(.rodata.*)
                0x00000000010003a0                . = ALIGN (0x10)
                0x00000000010003a0                __erodata = .

.data           0x00000000010003a0        0x0
                0x00000000010003a0                . = ALIGN (0x4)
                0x00000000010003a0                __sdata = .
                0x00000000010003a0                __data_start = .
 *(.data)
 *(.data*)
 *(.data.*)
                0x00000000010003a0                __global_pointer$ = .
 *(.sdata)
 *(.sdata.*)
                0x00000000010003a0                . = ALIGN (0x10)
                0x00000000010003a0                __data_end__ = .
                0x00000000010003a0                __edata = .

.bss            0x00000000010003a0      0x520
                0x00000000010003a0                . = ALIGN (0x4)
                0x00000000010003a0                __sbss = ALIGN (0x4)
                0x00000000010003a0                __bss_start__ = .
 *(.bss)
 .bss           0x00000000010003a0        0x1 Obj/uart.o
 *(.bss.*)
 *fill*         0x00000000010003a1        0x3 
 .bss.app_stack
                0x00000000010003a4      0x200 Obj/crt0.o
                0x00000000010005a4                __initial_sp
 .bss.trap_stack
                0x00000000010005a4      0x208 Obj/crt0.o
                0x00000000010005a4                g_trapstackbase
                0x00000000010005a4                g_trapstackalloc
                0x00000000010007a4                g_trap_sp
                0x00000000010007a4                g_top_trapstack
 *(COMMON)
 COMMON         0x00000000010007ac      0x10a Obj/uart.o
                0x00000000010007ac                i2c_slave_buffer
                0x00000000010007b4                fifo
                0x00000000010008b4                wp
                0x00000000010008b5                rp
                0x00000000010008c0                . = ALIGN (0x10)
 *fill*         0x00000000010008b6        0xa 
                0x00000000010008c0                __bss_end__ = .
 *crt0.o(.bss.app_stack)
 *crt0.o(.bss.trap_stack)
                0x00000000010008c0                __end = .
                0x00000000010008c0                end = .
OUTPUT(Obj/i2c_slave_test.elf elf32-littleriscv)

.rela.dyn       0x00000000010008c0        0x0
 .rela.text     0x00000000010008c0        0x0 Obj/crt0.o
 .rela.exp_table
                0x00000000010008c0        0x0 Obj/crt0.o
 .rela.text.init
                0x00000000010008c0        0x0 Obj/crt0.o

.riscv.attributes
                0x0000000000000000       0x29
 .riscv.attributes
                0x0000000000000000       0x29 Obj/crt0.o
 .riscv.attributes
                0x0000000000000029       0x29 Obj/main.o
 .riscv.attributes
                0x0000000000000052       0x29 Obj/uart.o

.comment        0x0000000000000000       0x32
 .comment       0x0000000000000000       0x32 Obj/main.o
                                         0x33 (size before relaxing)
 .comment       0x0000000000000032       0x33 Obj/uart.o

.debug_line     0x0000000000000000      0xb3d
 .debug_line    0x0000000000000000      0x25f Obj/crt0.o
 .debug_line    0x000000000000025f      0x2e1 Obj/main.o
 .debug_line    0x0000000000000540      0x5fd Obj/uart.o

.debug_info     0x0000000000000000     0x1856
 .debug_info    0x0000000000000000       0x22 Obj/crt0.o
 .debug_info    0x0000000000000022      0xb6d Obj/main.o
 .debug_info    0x0000000000000b8f      0xcc7 Obj/uart.o

.debug_abbrev   0x0000000000000000      0x5f9
 .debug_abbrev  0x0000000000000000       0x12 Obj/crt0.o
 .debug_abbrev  0x0000000000000012      0x2ce Obj/main.o
 .debug_abbrev  0x00000000000002e0      0x319 Obj/uart.o

.debug_aranges  0x0000000000000000       0x68
 .debug_aranges
                0x0000000000000000       0x28 Obj/crt0.o
 .debug_aranges
                0x0000000000000028       0x20 Obj/main.o
 .debug_aranges
                0x0000000000000048       0x20 Obj/uart.o

.debug_str      0x0000000000000000      0x6fc
 .debug_str     0x0000000000000000       0x3c Obj/crt0.o
 .debug_str     0x000000000000003c      0x62a Obj/main.o
                                        0x6c9 (size before relaxing)
 .debug_str     0x0000000000000666       0x96 Obj/uart.o
                                        0x730 (size before relaxing)

.debug_ranges   0x0000000000000000       0x38
 .debug_ranges  0x0000000000000000       0x20 Obj/crt0.o
 .debug_ranges  0x0000000000000020       0x18 Obj/uart.o

.debug_loc      0x0000000000000000       0x28
 .debug_loc     0x0000000000000000       0x14 Obj/main.o
 .debug_loc     0x0000000000000014       0x14 Obj/uart.o

.debug_frame    0x0000000000000000       0x88
 .debug_frame   0x0000000000000000       0x38 Obj/main.o
 .debug_frame   0x0000000000000038       0x50 Obj/uart.o
